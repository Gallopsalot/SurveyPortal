#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18444
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Data.Linq;
using System.Data.Linq.Mapping;
using System.Linq;
using System.Linq.Expressions;
using System.Reflection;



[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="surveyportal")]
public partial class SurveyPortalDBDataContext : System.Data.Linq.DataContext
{
	
	private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
	
  #region Extensibility Method Definitions
  partial void OnCreated();
  partial void Insertuser(user instance);
  partial void Updateuser(user instance);
  partial void Deleteuser(user instance);
  partial void Insertvalidationcode(validationcode instance);
  partial void Updatevalidationcode(validationcode instance);
  partial void Deletevalidationcode(validationcode instance);
  #endregion
	
	public SurveyPortalDBDataContext() : 
			base(global::System.Configuration.ConfigurationManager.ConnectionStrings["surveyportalConnectionString3"].ConnectionString, mappingSource)
	{
		OnCreated();
	}
	
	public SurveyPortalDBDataContext(string connection) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public SurveyPortalDBDataContext(System.Data.IDbConnection connection) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public SurveyPortalDBDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public SurveyPortalDBDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public System.Data.Linq.Table<user> users
	{
		get
		{
			return this.GetTable<user>();
		}
	}
	
	public System.Data.Linq.Table<validationcode> validationcodes
	{
		get
		{
			return this.GetTable<validationcode>();
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.users")]
public partial class user : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _id;
	
	private string _email;
	
	private string _password;
	
	private string _username;
	
	private System.Nullable<bool> _isEnabled;
	
	private EntitySet<validationcode> _validationcodes;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnemailChanging(string value);
    partial void OnemailChanged();
    partial void OnpasswordChanging(string value);
    partial void OnpasswordChanged();
    partial void OnusernameChanging(string value);
    partial void OnusernameChanged();
    partial void OnisEnabledChanging(System.Nullable<bool> value);
    partial void OnisEnabledChanged();
    #endregion
	
	public user()
	{
		this._validationcodes = new EntitySet<validationcode>(new Action<validationcode>(this.attach_validationcodes), new Action<validationcode>(this.detach_validationcodes));
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int id
	{
		get
		{
			return this._id;
		}
		set
		{
			if ((this._id != value))
			{
				this.OnidChanging(value);
				this.SendPropertyChanging();
				this._id = value;
				this.SendPropertyChanged("id");
				this.OnidChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_email", DbType="VarChar(50)")]
	public string email
	{
		get
		{
			return this._email;
		}
		set
		{
			if ((this._email != value))
			{
				this.OnemailChanging(value);
				this.SendPropertyChanging();
				this._email = value;
				this.SendPropertyChanged("email");
				this.OnemailChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_password", DbType="VarChar(16)")]
	public string password
	{
		get
		{
			return this._password;
		}
		set
		{
			if ((this._password != value))
			{
				this.OnpasswordChanging(value);
				this.SendPropertyChanging();
				this._password = value;
				this.SendPropertyChanged("password");
				this.OnpasswordChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_username", DbType="VarChar(16)")]
	public string username
	{
		get
		{
			return this._username;
		}
		set
		{
			if ((this._username != value))
			{
				this.OnusernameChanging(value);
				this.SendPropertyChanging();
				this._username = value;
				this.SendPropertyChanged("username");
				this.OnusernameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_isEnabled", DbType="Bit")]
	public System.Nullable<bool> isEnabled
	{
		get
		{
			return this._isEnabled;
		}
		set
		{
			if ((this._isEnabled != value))
			{
				this.OnisEnabledChanging(value);
				this.SendPropertyChanging();
				this._isEnabled = value;
				this.SendPropertyChanged("isEnabled");
				this.OnisEnabledChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="user_validationcode", Storage="_validationcodes", ThisKey="id", OtherKey="userid")]
	public EntitySet<validationcode> validationcodes
	{
		get
		{
			return this._validationcodes;
		}
		set
		{
			this._validationcodes.Assign(value);
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_validationcodes(validationcode entity)
	{
		this.SendPropertyChanging();
		entity.user = this;
	}
	
	private void detach_validationcodes(validationcode entity)
	{
		this.SendPropertyChanging();
		entity.user = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.validationcodes")]
public partial class validationcode : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _id;
	
	private string _code;
	
	private System.Nullable<int> _userid;
	
	private EntityRef<user> _user;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OncodeChanging(string value);
    partial void OncodeChanged();
    partial void OnuseridChanging(System.Nullable<int> value);
    partial void OnuseridChanged();
    #endregion
	
	public validationcode()
	{
		this._user = default(EntityRef<user>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int id
	{
		get
		{
			return this._id;
		}
		set
		{
			if ((this._id != value))
			{
				this.OnidChanging(value);
				this.SendPropertyChanging();
				this._id = value;
				this.SendPropertyChanged("id");
				this.OnidChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_code", DbType="VarChar(16)")]
	public string code
	{
		get
		{
			return this._code;
		}
		set
		{
			if ((this._code != value))
			{
				this.OncodeChanging(value);
				this.SendPropertyChanging();
				this._code = value;
				this.SendPropertyChanged("code");
				this.OncodeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_userid", DbType="Int")]
	public System.Nullable<int> userid
	{
		get
		{
			return this._userid;
		}
		set
		{
			if ((this._userid != value))
			{
				if (this._user.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnuseridChanging(value);
				this.SendPropertyChanging();
				this._userid = value;
				this.SendPropertyChanged("userid");
				this.OnuseridChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="user_validationcode", Storage="_user", ThisKey="userid", OtherKey="id", IsForeignKey=true)]
	public user user
	{
		get
		{
			return this._user.Entity;
		}
		set
		{
			user previousValue = this._user.Entity;
			if (((previousValue != value) 
						|| (this._user.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._user.Entity = null;
					previousValue.validationcodes.Remove(this);
				}
				this._user.Entity = value;
				if ((value != null))
				{
					value.validationcodes.Add(this);
					this._userid = value.id;
				}
				else
				{
					this._userid = default(Nullable<int>);
				}
				this.SendPropertyChanged("user");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}
#pragma warning restore 1591
